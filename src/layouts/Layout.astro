---
export interface Props {
  title: string;
  metaDescription?: string;
}

const { title, metaDescription } = Astro.props;
---

<!DOCTYPE html>
<html lang="fr" class="scroll-smooth bg-anthracite-950 antialiased">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;700&family=Space+Grotesk:wght@300;400;500;600;700&family=Syne:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <title>{title}</title>
    <meta name="description" content={metaDescription || "Développeur web et logiciel back-end proposant des solutions sur mesure pour vos projets."} />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body class="overflow-x-hidden min-h-screen flex flex-col bg-anthracite-950 text-white">
    <div class="design-grid">
      <div class="vertical-line"></div>
      <div class="vertical-line"></div>
      <div class="vertical-line"></div>
    </div>
    <slot />
    <div id="cursor-follow" class="fixed w-6 h-6 pointer-events-none mix-blend-difference hidden md:block"></div>
  </body>
  <script
    src="https://kit.fontawesome.com/349ee9c857.js" crossorigin="anonymous"
  ></script>
  <script>
    document.addEventListener('mousemove', (e) => {
      const cursor = document.getElementById('cursor-follow');
      if (cursor) {
        cursor.style.left = `${e.clientX}px`;
        cursor.style.top = `${e.clientY}px`;

        const target = e.target as HTMLElement;
        if (target && 
            ((target instanceof HTMLElement && ['A', 'BUTTON'].includes(target.tagName)) || 
             (target instanceof HTMLElement && target.classList.contains('interactive')))) {
          cursor.classList.add('cursor-active');
        } else {
          cursor.classList.remove('cursor-active');
        }
      }
    });

    const observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.1
    };
  
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('revealed');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
  
    document.addEventListener('DOMContentLoaded', () => {
      const revealElements = document.querySelectorAll('[data-reveal]');
      revealElements.forEach((element, index) => {
        const htmlElement = element as HTMLElement;
        htmlElement.style.setProperty('--reveal-delay', `${index * 0.1}s`);
        observer.observe(element);
      });
    });
  </script>
</html>
<style is:global>
  :root {
    --animate-duration: 0.6s;
    --animate-delay: 0.2s;
  }

  html {
    scroll-behavior: smooth;
  }
  
  body {
    font-family: 'Space Grotesk', system-ui, sans-serif;
    background-color: #121212;
    color: #ffffff;
  }

  h1, h2, h3, h4 {
    font-family: 'Syne', system-ui, sans-serif;
    font-weight: 700;
  }

  code, pre {
    font-family: 'JetBrains Mono', monospace;
  }


  .design-grid {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    pointer-events: none;
  }

  .vertical-line {
    width: 1px;
    height: 100vh;
    background-color: rgba(255, 255, 255, 0.02);
    position: absolute;
    top: 0;
  }

  .vertical-line:nth-child(1) { left: 25%; }
  .vertical-line:nth-child(2) { left: 50%; }
  .vertical-line:nth-child(3) { left: 75%; }


  #cursor-follow {
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 0;
    transform: translate(-50%, -50%);
    transition: width 0.2s, height 0.2s, background-color 0.2s;
    z-index: 9999;
  }

  #cursor-follow.cursor-active {
    width: 24px;
    height: 24px;
    background-color: rgba(255, 48, 79, 0.5);
  }

  [data-reveal] {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease-out, transform 1s ease-out;
    transition-delay: var(--reveal-delay, 0s);
  }

  [data-reveal].revealed {
    opacity: 1;
    transform: translateY(0);
  }

  
  .btn {
    border-radius: 0 !important;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-family: 'Syne', system-ui, sans-serif;
    font-weight: 600;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .btn::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: currentColor;
    transition: width 0.3s ease;
  }

  .btn:hover::after {
    width: 100%;
  }


  a {
    position: relative;
    transition: all 0.3s ease;
    text-decoration: none;
  }
  
  a:not(.btn)::after {
    content: '';
    position: absolute;
    width: 0;
    height: 1px;
    bottom: -2px;
    left: 0;
    background-color: #FF304F;
    transition: width 0.3s ease;
  }
  
  a:not(.btn):hover::after {
    width: 100%;
  }


  ::-webkit-scrollbar {
    width: 8px;
    background-color: #121212;
  }
  
  ::-webkit-scrollbar-thumb {
  background-color: #F97316; 
  border-radius: 0;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #FDBA74; 
}

#cursor-follow.cursor-active {
    width: 24px;
    height: 24px;
    background-color: rgba(249, 115, 22, 0.5); /* Orange accent au lieu de rouge */
  }

  /* Styles des boutons et liens */
  a {
    position: relative;
    transition: all 0.3s ease;
    text-decoration: none;
  }
  
  a:not(.btn)::after {
    content: '';
    position: absolute;
    width: 0;
    height: 1px;
    bottom: -2px;
    left: 0;
    background-color: #F97316; /* Orange accent au lieu de rouge */
    transition: width 0.3s ease;
  }
  
  /* Classe spécifique pour les liens blancs */
  a.link-white::after {
    background-color: #FFFFFF;
  }
  
  /* Surcharge pour les liens d'accent */
  a.link-accent::after {
    background-color: #F97316; 
  }

  /* Sélection de texte */
  ::selection {
    background: rgba(249, 115, 22, 0.3); 
    color: #ffffff;
  }
  
  /* Ligne de décoration */
  .line-decoration {
    height: 1px;
    width: 50px;
    background-color: #F97316; 
    margin: 2rem 0;
  }
</style>